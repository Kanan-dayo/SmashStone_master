//=============================================================================
//
// ポリゴンコライダーマネージャー処理  [ polyCollMana.cpp ]
// Author : KANAN NAGANAWA
//
//=============================================================================

//=============================================================================
// インクルードファイル
//=============================================================================
#include "polyCollMana.h"
#include "manager.h"
#include "renderer.h"
#include "debugproc.h"
#include "game.h"

//=============================================================================
// マクロ定義
//=============================================================================

//=============================================================================
// 静的メンバ変数の初期化
//=============================================================================

//=============================================================================
// 初期化
//=============================================================================
void CPolyCollMana::Init()
{
	// 現在のステージ数を取得
	int nStage = CGame::GetStageType();

	for (int nCnt = 0; nCnt < CPolygonCollider::GetNumPoly(nStage); nCnt++)
	{
		// ポリゴンコライダーを生成
		m_pPolyColl.push_back(CPolygonCollider::Create(nStage, nCnt));
	}
}

//=============================================================================
// 終了
//=============================================================================
void CPolyCollMana::Uninit()
{
	for (int nCnt = 0; nCnt < (int)m_pPolyColl.size(); nCnt++)
	{
		// 終了・破棄
		m_pPolyColl[nCnt]->Uninit();
		delete m_pPolyColl[nCnt];
		m_pPolyColl[nCnt] = nullptr;
	}
	m_pPolyColl.clear();
}

//=============================================================================
// 更新
//=============================================================================
void CPolyCollMana::Update()
{
	for (int nCnt = 0; nCnt < (int)m_pPolyColl.size(); nCnt++)
	{
		m_pPolyColl[nCnt]->Update();
	}
}

//=============================================================================
// 描画
//=============================================================================
void CPolyCollMana::Draw()
{
	for (int nCnt = 0; nCnt < (int)m_pPolyColl.size(); nCnt++)
	{
		m_pPolyColl[nCnt]->Draw();
	}
}

//=============================================================================
// 生成
//=============================================================================
CPolyCollMana * CPolyCollMana::Create(void)
{
	// メモリ確保
	CPolyCollMana *pMana = new CPolyCollMana;

	// nullcheck
	if (!pMana)
		return nullptr;

	// 初期化
	pMana->Init();
	// 値を返す
	return pMana;
}
