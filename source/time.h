//==================================================================================================================
//
// タイム[time.h]
// Author : Seiya Takahashi
//
//==================================================================================================================
#ifndef _TIME_H_
#define _TIME_H_

//==================================================================================================================
// インクルードファイル
//==================================================================================================================
#include "main.h"

//==================================================================================================================
// マクロ定義
//==================================================================================================================
#define MAX_TIME 2						// 最大桁数
#define START_TIMU 99					// 始まる秒数
#define FRAME_TIMU 60					// フレームの時間
#define TIME_POS_X 630.0f				// タイムの位置X
#define TIME_POS_Y 50.0f				// タイムの位置Y
#define TIME_INTERVAL_X 33				// 数字と数字の間の距離X
#define TIME_INTERVAL 10.0f				// 数字と数字の間の距離Y

//==================================================================================================================
// 前方宣言
//==================================================================================================================

//==================================================================================================================
//
// タイムクラスの定義
//
//==================================================================================================================
class CNumber;

class CTime
{
public:

	CTime();			// コンストラクタ
	~CTime();						// デストラクタ
	void Init(void);				// 初期化処理
	void Uninit(void);				// 終了処理
	void Update(void);				// 更新処理
	void Draw(void);				// 描画処理

	static int GetTime(void);		// 時間取得処理
	static CTime *Create(void);		// 生成処理

	void SetPos(D3DXVECTOR3 pos);	// 位置設定処理
	void SetTime(int nTime);		// タイム設定処理
	void SetbActive(bool bActive) {m_bActive = bActive; }	// タイマーを有効にする
	bool GetbActive(void) { return m_bActive; }				// 有効かどうか

	void ResetTime(void);

protected:

private:
	static int	m_nTime;			// タイム

	DWORD m_dStartTime;				// 始まるタイム
	CNumber *m_apNumber[MAX_TIME];	// タイムの変数

	D3DXVECTOR3 m_pos;				// 位置
	bool		m_bActive;
};
#endif